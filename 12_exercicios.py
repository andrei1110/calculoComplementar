# -*- coding: utf-8 -*-
"""12-Exercicios.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UMn1WlpIzShk3b12yDmaCgxGcstoQhsZ

# 1. Exercícios

Este é um exercício opcional para testar sua compreensão do básico do Python. Se você acha isso extremamente desafiador, provavelmente ainda não está pronto para o restante desta disciplina e não possui experiência em programação suficiente para continuar.

## Exercícios

Responda às perguntas ou conclua as tarefas descritas em negrito abaixo, use o método específico descrito, se aplicável.

**What is 7 to the power of 4?**
"""

7**4

"""**Split this string:**

    s = "Hi there Sam!"
    
**into a list.**
"""

s = "Hi there Sam!"
out = []
out = s.split()
print(out)



"""**Given the variables:**

    planet = "Earth"
    diameter = 12742

**Use .format() to print the following string:**

    The diameter of Earth is 12742 kilometers.
"""

planet = "Earth"
diameter = 12742
str = "The diameter of {} is {} kilometers."
print(str.format(planet, diameter))



"""**Given this nested list, use indexing to grab the word "hello"**"""

lst = [1,2,[3,4],[5,[100,200,['hello']],23,11],1,7]

print(lst[3][1][2])

"""**Given this nested dictionary grab the word "hello". Be prepared, this will be annoying/tricky**"""

d = {'k1':[1,2,3,{'tricky':['oh','man','inception',{'target':[1,2,3,'hello']}]}]}

print(d['k1'][3]['tricky'][3]['target'][3])

"""**What is the main difference between a tuple and a list?**"""

# Tuple is immutable

"""**Create a function that grabs the email website domain from a string in the form:**

    user@domain.com
    
**So for example, passing "user@domain.com" would return: domain.com**
"""

def domainGet(mail):
  str =  mail.split('@')
  #str[0] tem o user do email
  print(str[1])

domainGet('user@domain.com')

"""**Create a basic function that returns True if the word 'dog' is contained in the input string. Don't worry about edge cases like a punctuation being attached to the word dog, but do account for capitalization.**"""

def findDog(str):
  if 'dog' in str:
    return True

findDog('Is there a dog here?')

"""**Create a function that counts the number of times the word "dog" occurs in a string. Again ignore edge cases.**"""

def countDog(str):
  a = str.count(' dog')
  print(a)

countDog('This dog runs faster than the other dog dude!')

"""**Use lambda expressions and the filter() function to filter out words from a list that don't start with the letter 's'. For example:**

    seq = ['soup','dog','salad','cat','great']

**should be filtered down to:**

    ['soup','salad']
"""

seq = ['soup','dog','salad','cat','great']

a = list(filter(lambda x: (x[0] == 's') , seq))
print(a)

"""### Final Problem
**You are driving a little too fast, and a police officer stops you. Write a function
  to return one of 3 possible results: "No ticket", "Small ticket", or "Big Ticket". 
  If your speed is 60 or less, the result is "No Ticket". If speed is between 61 
  and 80 inclusive, the result is "Small Ticket". If speed is 81 or more, the result is "Big    Ticket". Unless it is your birthday (encoded as a boolean value in the parameters of the function) -- on your birthday, your speed can be 5 higher in all 
  cases.**
"""

def caught_speeding(speed, is_birthday):
    if is_birthday == False:
      if speed <= 60:
        print( "No ticket")
      elif speed > 60 and speed <= 80:
        print( "Small Ticket")
      elif speed > 80:
        print("Big Ticket")
    else: #bday = True
      if speed <= 60+5:
        print( "No ticket")
      if speed > 60+5 and speed <= 80+5:
        print( "Small Ticket")
      elif speed > 80+5:
        print("Big Ticket")

caught_speeding(81,True)

caught_speeding(81,False)

"""# Great job!"""